volumes:
  db_data:
  static_volume:
  media_volume:


services:
  db:
    container_name: db
    image: mysql:8.0
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - '3306:3306'
    volumes:
      - db_data:/var/lib/mysql

  redis:
    image: redis:7
    container_name: redis
    restart: always
    ports:
     - '6379:6379'

  celery:
    build: .
    container_name: celery
    command: celery -A learn_flow worker --loglevel=info
    environment:
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    depends_on:
      - db
      - redis

  backend:
    container_name: backend
    build: .
    volumes:
     - static_volume:/vol/backend/static
     - media_volume:/vol/backend/media
    environment:
      DB_NAME: ${MYSQL_DATABASE}
      DB_USER: ${MYSQL_USER}
      DB_PASSWORD: ${MYSQL_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      CELERY_BROKER_URL: ${CELERY_BROKER_URL}
      CELERY_RESULT_BACKEND: ${CELERY_RESULT_BACKEND}
    depends_on:
      - db
      - redis
    ports:
      - '8000:8000'

  nginx:
    image: nginx:1.27
    container_name: nginx
    ports:
      - '80:80'
    volumes:
      - static_volume:/vol/backend/static
      - media_volume:/vol/backend/media
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - db
